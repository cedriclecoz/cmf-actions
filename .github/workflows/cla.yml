on:
  workflow_call:
    secrets:
      PERSONAL_ACCESS_TOKEN:
        required: true

# explicitly configure permissions, in case your GITHUB_TOKEN workflow permissions are set to read-only in repository settings
permissions:
  actions: write
  contents: read # this can be 'read' if the signatures are in remote repository
  pull-requests: write
  statuses: write

jobs:
  CLA-Lite:
    name: "Check"
    runs-on: ubuntu-latest
    steps:
      - if: (startsWith(github.event.comment.body, 'recheck') || startsWith(github.event.comment.body, 'I have read the CLA Document and I hereby sign the CLA')) || github.event_name == 'pull_request_target'
        uses: rdkcentral/contributor-assistant_github-action@v2.6.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # the below token should have repo scope and must be manually added by you in the repository's secret
          # This token is required only if you have configured to store the signatures in a remote repository/organization
          PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
        with:
          remote-organization-name: 'rdkcentral'
          remote-repository-name: 'cla_signatures'
          path-to-signatures: 'signatures.json'
          
          path-to-document: 'https://gist.github.com/rdkcmf-jenkins/c797df2d0f276bbae7c2b394e895c263' # e.g. a CLA or a DCO document
          # branch should not be protected
          branch: 'main'
          allowlist: dependabot*, dependabot[bot], dependabot, semantic-release-bot, rdkcm-rdke, rdkcm-bot

          # whitelisted domains
          domain-allow-list-file: 'domains.json'

          # status context (for manually setting status)
          status-context: 'Signature / Check'

         # the followings are the optional inputs - If the optional inputs are not given, then default values will be taken
          #domain-allow-list: email domains in the allow list don't have to sign the CLA document
          #domain-allow-list-file: same as above, value is a path to a JSON file containing the domain list
          #remote-organization-name: enter the remote organization name where the signatures should be stored (Default is storing the signatures in the same repository)
          #remote-repository-name: enter the  remote repository name where the signatures should be stored (Default is storing the signatures in the same repository)
          #create-file-commit-message: 'For example: Creating file for storing CLA Signatures'
          #signed-commit-message: 'For example: $contributorName has signed the CLA in $owner/$repo#$pullRequestNo'
          #custom-notsigned-prcomment: 'pull request comment with Introductory message to ask new contributors to sign'
          #custom-pr-sign-comment: 'The signature to be committed in order to sign the CLA'
          #custom-allsigned-prcomment: 'pull request comment when all contributors has signed, defaults to **CLA Assistant Lite bot** All Contributors have signed the CLA.'
          #lock-pullrequest-aftermerge: false - if you don't want this bot to automatically lock the pull request after merging (default - true)
          #use-dco-flag: true - If you are using DCO instead of CLA
